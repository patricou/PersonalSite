# URL params
server.context-path=/springbootapp
# port of your site 
server.port = 8000
#disable default white label page in case of error
server.error.whitelabel.enabled = false
# for ssl
server.ssl.key-store: tomcat.keystore
server.ssl.key-store-password: xxxx
#server.ssl.keyStoreType:
 server.ssl.keyAlias: tomcat
# directory containing your images ( terminate it with / with unix or windows )
appli.imagesDir=w:/
# directory to upload your files
appli.uploadDir=w:/
# main page image & Video ( to begin with / )
appli.mainPageImage=image/divers/site_images/Water-2002.JPG
appli.mainPageVideo=image/divers/video/Water-2002.mp4
# Name displayed in the application pages
appli.displayName=Pat
appli.displayNameCopyright=Patricou
appli.sendailTo=deschamps.pat@gmail.com
appli.sendailFrom=deschamps.pat@gmail.com
appli.IPServer=81.28.193.182
# user of the application
# Security authorize mode to apply.
security.basic.authorize-mode=role
# Enable basic authentication.
security.basic.enabled=false
#security.user.name=pat
#security.user.password=xxxx
# Set the file size limit (default 1Mb). If you want to specify that files be
# unlimited set the multipart.maxFileSize property to -1.
multipart.maxFileSize = 20Mb
# Set the total request size for a multipart/form-data 
multipart.maxRequestSize = 200Mb
# DB paramters included in the war
#spring.datasource.url = jdbc:h2:mem:patdb;DB_CLOSE_ON_EXIT=false;
#spring.datasource.username = sa
#spring.datasource.password = xxxx
#spring.h2.console.enabled=true
spring.datasource.url = jdbc:mysql://192.168.1.18:3306/patdb
spring.datasource.username=pat
spring.datasource.password=xxxx
spring.datasource.driverclassName=com.mysql.jdbc.Driver
spring.datasource.tomcat.max-wait=10000
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=5
#(int) The minimum number of established connections that should be kept in the pool at all times.
spring.datasource.tomcat.min-idle=3
# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true
#drop and recreate the table but not insert data inside
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.hbm2ddl.auto=update
#recreate the tables and init then whit the sql scripts, run only with in memory db ( if table already exists )
spring.datasource.initialize=false
#to prevent the table name modif from( for ex : CATEGORY_LINK to category_link
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.EJB3NamingStrategy
# Mail server parameters
spring.mail.host=smtp.gmail.com
spring.mail.port= 25
spring.mail.username= patricou.pat@gmail.com
spring.mail.password= xxxx
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
#Disable caching in the Resource chain.
#spring.resources.chain.cache=false
# it doesn't seems the below works fine
#spring.info.build.location=classpath:build-info.properties
#spring.info.git.location=classpath:git.properties
# information available at .../info
info.author = Patrick Deschamps
info.contactEmail = deschamps.pat@gmail.com
logging.level.org.springframework.security: INFO
